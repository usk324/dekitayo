<div id="snowflakeContainer">
  <%# <p class="snowflake">❄️</p> %>
  <%# --------heading-------- %>
  <div id="container">
    <div id="header">
      <div class="header-left d-flex fs-3 fw-bold">
        <div>  Welcome back, <%= current_child.name %>!</div>
      </div>
      <div class="header-center d-flex  gap-4 fs-4">
        <div> Today is <%=Time.now.strftime("%A, %B %d, %Y") %> </div>
        <div><i class="fa-solid fa-map-pin"></i> It is <%= @weather['main']['temp'] %> °C in Tokyo</div>
        <div><i class="fa-regular fa-clock"></i> <%=Time.now.strftime("%H:%M") %></div>
      </div>
      <div class="header-right d-flex">
        <div><%= link_to current_child.coins, rewards_path, class: "btn fs-3 fw-bold "%><i class="fa-solid fa-sack-dollar fa-beat fa-2xl" style="color: #e69b19;"></i></div>
      </div>
    </div>
    <!--flex left -->
    <div class="missions position-fixed">
      <div class="d-flex justify-content-between">
        <h2><strong>Today's Missions</strong></h2>
        <h1><%=current_child.missions.daily_missions.where(status: "finished").count %>/<%= current_child.missions.daily_missions.size %></h1>
      </div>
      <% if current_child.missions.daily_missions.find_by(status: "started")%>
        <p class="text-center">~You have <%= pluralize(current_child.missions.daily_missions.size, "mission") %> to complete today~</p>
      <% else %>
        <p class="text-center">~No missions available~</p>
      <% end %>
      <% current_child.missions.daily_missions.each do |mission| %>
        <% unless mission.status == "finished"%>
          <%= render partial: "missions/mission_card", locals: { mission: mission } %>
        <% end %>
      <% end %>
      <%= link_to "View Future Missions", missions_path, class: "btn btn-gradient" %>
    </div>
    <!--flex right -->
    <div id="gameboard" class="position-fixed">
      <%= render "shared/gameboard", position: current_child.position %>
    </div>
    <%# -------------tiles 1-9--------------- %>
    <% (1..9).each do |number| %>
      <%= image_tag("game_tile.png", alt: "game tile", size: "150x150", class: "tile-position position-#{number}") %>
    <% end %>
    <%# ------Special tile #10----------- %>
    <%= image_tag("purple.png", alt: "game tile", size: "150x150", class: "tile-position position-10") %>
    <%# -------------tiles 11-19--------------- %>
    <% (11..19).each do |number| %>
      <%= image_tag("game_tile.png", alt: "game tile", size: "150x150", class: "tile-position position-#{number}") %>
    <% end %>
    <%# ------Special tile #20----------- %>
    <%= image_tag("multi.png", alt: "game tile", size: "150x150", class: "tile-position position-20") %>
    <%# -------------tiles 21-29--------------- %>
    <% (21..29).each do |number| %>
      <%= image_tag("game_tile.png", alt: "game tile", size: "150x150", class: "tile-position position-#{number}") %>
    <% end %>
    <%# ------Special tile #30----------- %>
    <%= image_tag("blue.png", alt: "game tile", size: "150x150", class: "tile-position position-30") %>
    <%# -------------tiles 31-39--------------- %>
    <% (31..39).each do |number| %>
      <%= image_tag("game_tile.png", alt: "game tile", size: "150x150", class: "tile-position position-#{number}") %>
    <% end %>
    <%# ------Special tile #40----------- %>
    <%= image_tag("pink.png", alt: "game tile", size: "150x150", class: "tile-position position-40") %>
    <%# -------------tiles 41-49--------------- %>
    <% (41..49).each do |number| %>
      <%= image_tag("game_tile.png", alt: "game tile", size: "150x150", class: "tile-position position-#{number}") %>
    <% end %>
    <%# ------Special tile #50----------- %>
    <%= image_tag("purpleblue.png", alt: "game tile", size: "150x150", class: "tile-position position-50") %>
    <%# -------------tiles 51-59--------------- %>
    <% (51..59).each do |number| %>
      <%= image_tag("game_tile.png", alt: "game tile", size: "150x150", class: "tile-position position-#{number}") %>
    <% end %>
    <%# ------Special tile #60----------- %>
    <%= image_tag("gold.png", alt: "game tile", size: "150x150", class: "tile-position position-60") %>
    <%# -------------tiles 61-65--------------- %>
    <% (61..65).each do |number| %>
      <%= image_tag("game_tile.png", alt: "game tile", size: "150x150", class: "tile-position position-#{number}") %>
    <% end %>
    <%# ------FINISH tile #66----------- %>
    <%= image_tag("purple.png", alt: "game tile", size: "150x150", class: "tile-position position-66") %>
    <%# ---------------gamboard background items-------------- %>
    <%= image_tag("https://gifdb.com/images/high/cute-cartoon-dancing-monkey-b8w8o0wwfcqkw67o.gif", size: "450x450", class: "dancing-monkey") %>
  </div>
</div>
</div>
<%# -------------------Javascript------------------ %>
<%# <script>
  document.addEventListener("DOMContentLoaded", function() {
    var requestAnimationFrame =
  	window.requestAnimationFrame ||
  	window.mozRequestAnimationFrame ||
  	window.webkitRequestAnimationFrame ||
  	window.msRequestAnimationFrame;

  var transforms = [
  	"transform",
  	"msTransform",
  	"webkitTransform",
  	"mozTransform",
  	"oTransform"
  ];

  var transformProperty = getSupportedPropertyName(transforms);

  // Array to store our Snowflake objects
  var snowflakes = [];

  // Global variables to store our browser's window size
  var browserWidth;
  var browserHeight;

  // Specify the number of snowflakes you want visible
  var numberOfSnowflakes = 50;

  // Flag to reset the position of the snowflakes
  var resetPosition = false;

  //
  // It all starts here...
  //
  function setup() {
  	window.addEventListener("DOMContentLoaded", generateSnowflakes, false);
  	window.addEventListener("resize", setResetFlag, false);
  }
  setup();

  //
  // Vendor prefix management
  //
  function getSupportedPropertyName(properties) {
  	for (var i = 0; i < properties.length; i++) {
  		if (typeof document.body.style[properties[i]] != "undefined") {
  			return properties[i];
  		}
  	}
  	return null;
  }

  //
  // Constructor for our Snowflake object
  //
  function Snowflake(element, speed, xPos, yPos) {
  	// set initial snowflake properties
  	this.element = element;
  	this.speed = speed;
  	this.xPos = xPos;
  	this.yPos = yPos;

  	// declare variables used for snowflake's motion
  	this.counter = 0;
  	this.sign = Math.random() < 0.5 ? 1 : -1;

  	// setting an initial opacity and size for our snowflake
  	this.element.style.opacity = 0.1 + Math.random();
  	this.element.style.fontSize = 14 + Math.random() * 50 + "px";
  }

  //
  // The function responsible for actually moving our snowflake
  //
  Snowflake.prototype.update = function () {
  	// using some trigonometry to determine our x and y position
  	this.counter += this.speed / 5000;
  	this.xPos += (this.sign * this.speed * Math.cos(this.counter)) / 40;
  	this.yPos += Math.sin(this.counter) / 40 + this.speed / 30;

  	// setting our snowflake's position
  	setTranslate3DTransform(
  		this.element,
  		Math.round(this.xPos),
  		Math.round(this.yPos)
  	);

  	// if snowflake goes below the browser window, move it back to the top
  	if (this.yPos > browserHeight) {
  		this.yPos = -50;
  	}
  };

  //
  // A performant way to set your snowflake's position
  //
  function setTranslate3DTransform(element, xPosition, yPosition) {
  	var val = "translate3d(" + xPosition + "px, " + yPosition + "px" + ", 0)";
  	element.style[transformProperty] = val;
  }

  //
  // The function responsible for creating the snowflake
  //
  function generateSnowflakes() {
  	// get our snowflake element from the DOM and store it
  	var originalSnowflake = document.querySelector(".snowflake");

  	// access our snowflake element's parent container
  	var snowflakeContainer = originalSnowflake.parentNode;

  	// get our browser's size
  	browserWidth = document.documentElement.clientWidth;
  	browserHeight = document.documentElement.clientHeight;

  	// create each individual snowflake
  	for (var i = 0; i < numberOfSnowflakes; i++) {
  		// clone our original snowflake and add it to snowflakeContainer
  		var snowflakeClone = originalSnowflake.cloneNode(true);
  		snowflakeContainer.appendChild(snowflakeClone);

  		// set our snowflake's initial position and related properties
  		var initialXPos = getPosition(50, browserWidth);
  		var initialYPos = getPosition(50, browserHeight);
  		var speed = 5 + Math.random() * 40;

  		// create our Snowflake object
  		var snowflakeObject = new Snowflake(
  			snowflakeClone,
  			speed,
  			initialXPos,
  			initialYPos
  		);
  		snowflakes.push(snowflakeObject);
  	}

  	// remove the original snowflake because we no longer need it visible
  	snowflakeContainer.removeChild(originalSnowflake);

  	// call the moveSnowflakes function every 30 milliseconds
  	moveSnowflakes();
  }

  //
  // Responsible for moving each snowflake by calling its update function
  //
  function moveSnowflakes() {
  	for (var i = 0; i < snowflakes.length; i++) {
  		var snowflake = snowflakes[i];
  		snowflake.update();
  	}

  	// Reset the position of all the snowflakes to a new value
  	if (resetPosition) {
  		browserWidth = document.documentElement.clientWidth;
  		browserHeight = document.documentElement.clientHeight;

  		for (var i = 0; i < snowflakes.length; i++) {
  			var snowflake = snowflakes[i];

  			snowflake.xPos = getPosition(50, browserWidth);
  			snowflake.yPos = getPosition(50, browserHeight);
  		}

  		resetPosition = false;
  	}

  	requestAnimationFrame(moveSnowflakes);
  }

  //
  // This function returns a number between (maximum - offset) and (maximum + offset)
  //
  function getPosition(offset, size) {
  	return Math.round(-1 * offset + Math.random() * (size + 2 * offset));
  }

  //
  // Trigger a reset of all the snowflakes' positions
  //
  function setResetFlag(e) {
  	resetPosition = true;
  }

  });
</script> %>
